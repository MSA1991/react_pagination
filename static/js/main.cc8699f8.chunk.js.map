{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","endIndexVisibleItems","startIndexVisibleItems","disableNextButton","disablePrevButton","className","classNames","disabled","href","onClick","slice","map","item","i","pageNumber","active","from","to","numbers","n","push","getNumbers","length","App","useState","setPerPage","setCurrentPage","id","value","onChange","event","target","htmlFor","prev","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAElCM,EAAuBL,EAAcD,EACrCO,EAAyBD,EAAuBN,EAEhDQ,EAAoBP,IAAgBE,EACpCM,EAAoC,IAAhBR,EAE1B,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAUH,IAJhB,SAQE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAAMZ,EAAa,SAL9B,oBAWDJ,EAAMiB,MAAM,EAAGZ,GAAea,KAAI,SAACC,EAAMC,GACxC,IAAMC,EAAaD,EAAI,EAEvB,OACE,oBAEER,UAAWC,IACT,YACA,CACES,OAAQD,IAAelB,IAL7B,SASE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMM,GACVL,QAAS,kBAAMZ,EAAaiB,IAJ9B,SAMGA,KAdEF,MAoBX,oBACEP,UAAWC,IACT,YACA,CACEC,SAAUJ,IAJhB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMZ,EAAa,SAL9B,uBAYJ,6BACGJ,EAAMiB,MAAMR,EAAwBD,GAAsBU,KAAI,SAAAC,GAAI,OACjE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxFbnB,ECNC,SAAoBuB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBV,KAAI,SAAAQ,GAAC,qBAAYA,MAEdzB,EAAQD,EAAM6B,OAEPC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO5B,EAAP,KAAoB8B,EAApB,KAyBA,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,qCACwBV,EADxB,eACsCD,EADtC,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOjC,EACPkC,SAtCuB,SAC/BC,GAEA,IAAQF,EAAUE,EAAMC,OAAhBH,MAERH,GAAYG,GACZF,EAAe,IA2BT,UAOE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDmB,SAAC+B,GACV,SAAVA,GACFF,GAAe,SAAAO,GAAI,OAAIA,EAAO,KAGlB,SAAVL,GACFF,GAAe,SAAAO,GAAI,OAAIA,EAAO,KAGX,kBAAVL,GACTF,EAAeE,UE/BrBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cc8699f8.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  items: string[],\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number | string) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n\n  const endIndexVisibleItems = currentPage * perPage;\n  const startIndexVisibleItems = endIndexVisibleItems - perPage;\n\n  const disableNextButton = currentPage === numberOfPages;\n  const disablePrevButton = currentPage === 1;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: disablePrevButton,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={disablePrevButton}\n            onClick={() => onPageChange('prev')}\n          >\n            «\n          </a>\n        </li>\n\n        {items.slice(0, numberOfPages).map((item, i) => {\n          const pageNumber = i + 1;\n\n          return (\n            <li\n              key={item}\n              className={classNames(\n                'page-item',\n                {\n                  active: pageNumber === currentPage,\n                },\n              )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${pageNumber}`}\n                onClick={() => onPageChange(pageNumber)}\n              >\n                {pageNumber}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: disableNextButton,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={disableNextButton}\n            onClick={() => onPageChange('next')}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {items.slice(startIndexVisibleItems, endIndexVisibleItems).map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleChangeItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { value } = event.target;\n\n    setPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  const handleChangePage = (value: number | string) => {\n    if (value === 'prev') {\n      setCurrentPage(prev => prev - 1);\n    }\n\n    if (value === 'next') {\n      setCurrentPage(prev => prev + 1);\n    }\n\n    if (typeof value === 'number') {\n      setCurrentPage(value);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page 1 (items 1 - ${perPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}